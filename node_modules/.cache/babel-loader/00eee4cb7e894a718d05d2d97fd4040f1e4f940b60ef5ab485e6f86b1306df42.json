{"ast":null,"code":"var _jsxFileName = \"/Users/birnares/learn-jsx/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./Styles/App.css\";\nimport Counter from \"./components/Counter\";\nimport Postlist from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/modal/MyModal\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport { usePosts } from \"./Hooks/usePosts\";\nimport PostService from \"./api/PostSirvice\";\nimport MyLoader from \"./components/UI/loader/MyLoader\";\nimport { useFetching } from \"./Hooks/useFetching\";\nimport { getPageCount, getPageArray } from \"./Utils/pages\";\n// import { usePagination } from \"./Hooks/usePagination\";\nimport MyPagination from \"./components/UI/pagination/MyPagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  // eslint-disable-next-line no-unused-vars\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  //собственный хук который предоставляет часто используемый функционал, а именно обработку идникации загрузки и обработку ошибки получения данных\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers[\"x-total-count\"];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // цикл жизни компонента MOUNT UPDATE UNMOUNT\n  useEffect(() => {\n    fetchPosts();\n  }, [page]); // массив зависимостей оставляем пустым, чтобы фукнция отработала единожды\n\n  //   Двусторонее связывание с компонентом PostForm\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // в качестве аргумента принимаем Post из дочернего элемента\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginRight: 20\n      },\n      onClick: fetchPosts,\n      children: \"Get Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: 20\n      },\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: \"15px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(MyLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Postlist, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"Список постов JS\"\n    }, posts.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyPagination, {\n      page: page,\n      setPage: setPage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XN6MCI5UoqYleVboTZ//LS+vjcg=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Counter","Postlist","PostForm","PostFilter","MyModal","MyButton","usePosts","PostService","MyLoader","useFetching","getPageCount","getPageArray","MyPagination","jsxDEV","_jsxDEV","App","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginRight","onClick","marginTop","visible","setVisible","create","margin","display","justifyContent","remove","title","_c","$RefreshReg$"],"sources":["/Users/birnares/learn-jsx/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./Styles/App.css\";\nimport Counter from \"./components/Counter\";\nimport Postlist from \"./components/PostList\";\nimport PostForm from \"./components/PostForm\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/modal/MyModal\";\nimport MyButton from \"./components/UI/button/MyButton\";\nimport { usePosts } from \"./Hooks/usePosts\";\nimport PostService from \"./api/PostSirvice\";\nimport MyLoader from \"./components/UI/loader/MyLoader\";\nimport { useFetching } from \"./Hooks/useFetching\";\nimport { getPageCount, getPageArray } from \"./Utils/pages\";\n// import { usePagination } from \"./Hooks/usePagination\";\nimport MyPagination from \"./components/UI/pagination/MyPagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  // eslint-disable-next-line no-unused-vars\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n\n  //собственный хук который предоставляет часто используемый функционал, а именно обработку идникации загрузки и обработку ошибки получения данных\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts(response.data);\n    const totalCount = response.headers[\"x-total-count\"];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n\n  // цикл жизни компонента MOUNT UPDATE UNMOUNT\n  useEffect(() => {\n    fetchPosts();\n  }, [page]); // массив зависимостей оставляем пустым, чтобы фукнция отработала единожды\n\n  //   Двусторонее связывание с компонентом PostForm\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n\n  // в качестве аргумента принимаем Post из дочернего элемента\n  const removePost = (post) => {\n    setPosts(posts.filter((p) => p.id !== post.id));\n  };\n\n  return (\n    <div className=\"App\">\n      <Counter />\n      <MyButton style={{ marginRight: 20 }} onClick={fetchPosts}>\n        Get Posts\n      </MyButton>\n      <MyButton style={{ marginTop: 20 }} onClick={() => setModal(true)}>\n        Создать пост\n      </MyButton>\n      <MyModal visible={modal} setVisible={setModal}>\n        <PostForm create={createPost} />\n      </MyModal>\n      <hr style={{ margin: \"15px 0\" }} />\n      <PostFilter filter={filter} setFilter={setFilter} />\n      {postError && <h1>Произошла ошибка ${postError}</h1>}\n      {isPostsLoading ? (\n        <div\n          style={{ display: \"flex\", justifyContent: \"center\", marginTop: 30 }}\n        >\n          <MyLoader />\n        </div>\n      ) : (\n        <Postlist\n          remove={removePost}\n          posts={sortedAndSearchedPosts}\n          title={\"Список постов JS\"}\n          key={posts.id}\n        />\n      )}\n      <MyPagination page={page} setPage={setPage} totalPages={totalPages} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
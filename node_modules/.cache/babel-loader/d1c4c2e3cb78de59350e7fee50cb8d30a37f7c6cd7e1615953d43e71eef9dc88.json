{"ast":null,"code":"var _jsxFileName = \"/Users/birnares/learn-jsx/src/components/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = _ref => {\n  _s();\n  let {\n    create\n  } = _ref;\n  const [post, setPost] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const addNewPost = e => {\n    e.preventDefault();\n    const newPost = {\n      ...post,\n      id: Date.now()\n    };\n    create(newPost);\n    setPost({\n      title: \"\",\n      body: \"\"\n    });\n  };\n\n  //   const bodyInputRef = useRef(); к не управляемому компаненту\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.title,\n      onChange: e => setPost({\n        ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.body,\n      onChange: e => setPost({\n        ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewPost,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"t8eI1tOZg+lyVlZcZOqyRxq9ZHk=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","MyInput","MyButton","jsxDEV","_jsxDEV","PostForm","_ref","_s","create","post","setPost","title","body","addNewPost","e","preventDefault","newPost","id","Date","now","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/birnares/learn-jsx/src/components/PostForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport MyInput from \"./UI/input/MyInput\";\nimport MyButton from \"./UI/button/MyButton\";\n\nconst PostForm = ({ create }) => {\n  const [post, setPost] = useState({ title: \"\", body: \"\" });\n\n  const addNewPost = (e) => {\n    e.preventDefault();\n\n    const newPost = {\n      ...post,\n      id: Date.now(),\n    };\n    create(newPost);\n    setPost({ title: \"\", body: \"\" });\n  };\n\n  //   const bodyInputRef = useRef(); к не управляемому компаненту\n\n  return (\n    <form>\n      {/* Управляемый компонент */}\n      <MyInput\n        value={post.title}\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\n        type=\"text\"\n        placeholder=\"Название поста\"\n      />\n      <MyInput\n        value={post.body}\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\n        type=\"text\"\n        placeholder=\"Описание поста\"\n      />\n      <MyButton onClick={addNewPost}>Создать пост</MyButton>\n\n      {/* Не управляемый компонент / Не контроллируемый компонент */}\n      {/* <MyInput \n        ref={bodyInputRef} \n        type=\"text\" \n        placeholder=\"Описание поста\" />\n        <MyButton onClick={addNewPost}>Создать пост</MyButton> */}\n    </form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC1B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEzD,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,OAAO,GAAG;MACd,GAAGP,IAAI;MACPQ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IACf,CAAC;IACDX,MAAM,CAACQ,OAAO,CAAC;IACfN,OAAO,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EAClC,CAAC;;EAED;;EAEA,oBACER,OAAA;IAAAgB,QAAA,gBAEEhB,OAAA,CAACH,OAAO;MACNoB,KAAK,EAAEZ,IAAI,CAACE,KAAM;MAClBW,QAAQ,EAAGR,CAAC,IAAKJ,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEE,KAAK,EAAEG,CAAC,CAACS,MAAM,CAACF;MAAM,CAAC,CAAE;MAC7DG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA,CAACH,OAAO;MACNoB,KAAK,EAAEZ,IAAI,CAACG,IAAK;MACjBU,QAAQ,EAAGR,CAAC,IAAKJ,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEG,IAAI,EAAEE,CAAC,CAACS,MAAM,CAACF;MAAM,CAAC,CAAE;MAC5DG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA,CAACF,QAAQ;MAAC4B,OAAO,EAAEjB,UAAW;MAAAO,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQlD,CAAC;AAEX,CAAC;AAACtB,EAAA,CAzCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}